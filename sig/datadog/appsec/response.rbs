module Datadog
  module AppSec
    class Response
      attr_reader status: ::Integer
      attr_reader headers: ::Hash[::String, ::String]
      attr_reader body: ::Array[::String]


      def initialize: (status: ::Integer, ?headers: ::Hash[::String, ::String], ?body: ::Array[::String]) -> void
      def to_rack: () -> ::Array[untyped]
      def to_sinatra_response: () -> ::Sinatra::Response
      def to_action_dispatch_response: () -> ::ActionDispatch::Response

      def self.negotiate: (::Hash[untyped, untyped] env) -> Response

      private

      CONTENT_TYPE_TO_FORMAT: ::Hash[::String, ::Symbol]
      DEFAULT_CONTENT_TYPE: ::String
      REDIRECT_STATUS: ::Array[::Integer]

      def self.content_type: (::Hash[untyped, untyped] env) -> ::String
      def self.content: (::String) -> ::String
      def self.status: () -> ::Integer
      def self.location: () -> ::URI?
      def self.redirect?: () -> bool

      self.@cache: ::Hash[::String, ::String]
      def self.cache: () -> ::Hash[::String, ::String]
    end
  end
end
